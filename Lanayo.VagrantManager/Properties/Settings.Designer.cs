//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lanayo.Vagrant_Manager.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Bookmarks {
            get {
                return ((string)(this["Bookmarks"]));
            }
            set {
                this["Bookmarks"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://github.com/lanayotech/vagrant-manager-windows")]
        public string GithubUrl {
            get {
                return ((string)(this["GithubUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://api.lanayo.com/info/vagrant_manager_windows")]
        public string AppInfoUrl {
            get {
                return ((string)(this["AppInfoUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://www.vagrantmanager.com/windows")]
        public string AboutUrl {
            get {
                return ((string)(this["AboutUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://api.lanayo.com/appcast/vagrant_manager_windows.xml")]
        public string AppcastUrl {
            get {
                return ((string)(this["AppcastUrl"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UsePathAsInstanceDisplayName {
            get {
                return ((bool)(this["UsePathAsInstanceDisplayName"]));
            }
            set {
                this["UsePathAsInstanceDisplayName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IncludeMachineNamesInMenu {
            get {
                return ((bool)(this["IncludeMachineNamesInMenu"]));
            }
            set {
                this["IncludeMachineNamesInMenu"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoCloseTaskWindows {
            get {
                return ((bool)(this["AutoCloseTaskWindows"]));
            }
            set {
                this["AutoCloseTaskWindows"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool LaunchAtLogin {
            get {
                return ((bool)(this["LaunchAtLogin"]));
            }
            set {
                this["LaunchAtLogin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowUpdateNotification {
            get {
                return ((bool)(this["ShowUpdateNotification"]));
            }
            set {
                this["ShowUpdateNotification"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool RefreshEvery {
            get {
                return ((bool)(this["RefreshEvery"]));
            }
            set {
                this["RefreshEvery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Stable")]
        public string AllowedUpdates {
            get {
                return ((string)(this["AllowedUpdates"]));
            }
            set {
                this["AllowedUpdates"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int RefreshEveryInterval {
            get {
                return ((int)(this["RefreshEveryInterval"]));
            }
            set {
                this["RefreshEveryInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RecursiveBookmarkScan {
            get {
                return ((bool)(this["RecursiveBookmarkScan"]));
            }
            set {
                this["RecursiveBookmarkScan"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Guid {
            get {
                return ((string)(this["Guid"]));
            }
            set {
                this["Guid"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("c:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe")]
        public string VBoxManagePath {
            get {
                return ((string)(this["VBoxManagePath"]));
            }
            set {
                this["VBoxManagePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool VBoxManagePathPrompted {
            get {
                return ((bool)(this["VBoxManagePathPrompted"]));
            }
            set {
                this["VBoxManagePathPrompted"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string DefaultTerminalCommand {
            get {
                return ((string)(this["DefaultTerminalCommand"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string UserTerminalCommand {
            get {
                return ((string)(this["UserTerminalCommand"]));
            }
            set {
                this["UserTerminalCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string CurrentTerminalCommand {
            get {
                return ((string)(this["CurrentTerminalCommand"]));
            }
            set {
                this["CurrentTerminalCommand"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("/K cd /d {INSTANCE}")]
        public string DefaultTerminalArguments {
            get {
                return ((string)(this["DefaultTerminalArguments"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("/K cd /d {INSTANCE}")]
        public string UserTerminalArguments {
            get {
                return ((string)(this["UserTerminalArguments"]));
            }
            set {
                this["UserTerminalArguments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("/K cd /d {INSTANCE}")]
        public string CurrentTerminalArguments {
            get {
                return ((string)(this["CurrentTerminalArguments"]));
            }
            set {
                this["CurrentTerminalArguments"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{INSTANCE}")]
        public string InstancePathVariable {
            get {
                return ((string)(this["InstancePathVariable"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{MACHINE}")]
        public string MachineNameVariable {
            get {
                return ((string)(this["MachineNameVariable"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string DefaultSshToMachineCommand {
            get {
                return ((string)(this["DefaultSshToMachineCommand"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string UserSshToMachineCommand {
            get {
                return ((string)(this["UserSshToMachineCommand"]));
            }
            set {
                this["UserSshToMachineCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string CurrentSshToMachineCommand {
            get {
                return ((string)(this["CurrentSshToMachineCommand"]));
            }
            set {
                this["CurrentSshToMachineCommand"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cd /d {INSTANCE} && vagrant ssh {MACHINE}")]
        public string DefaultSshToMachineArguments {
            get {
                return ((string)(this["DefaultSshToMachineArguments"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cd /d {INSTANCE} && vagrant ssh {MACHINE}")]
        public string UserSshToMachineArguments {
            get {
                return ((string)(this["UserSshToMachineArguments"]));
            }
            set {
                this["UserSshToMachineArguments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cd /d {INSTANCE} && vagrant ssh {MACHINE}")]
        public string CurrentSshToMachineArguments {
            get {
                return ((string)(this["CurrentSshToMachineArguments"]));
            }
            set {
                this["CurrentSshToMachineArguments"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cd /d {INSTANCE} && vagrant ssh")]
        public string DefaultSshToInstanceArguments {
            get {
                return ((string)(this["DefaultSshToInstanceArguments"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cd /d {INSTANCE} && vagrant ssh")]
        public string UserSshToInstanceArguments {
            get {
                return ((string)(this["UserSshToInstanceArguments"]));
            }
            set {
                this["UserSshToInstanceArguments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cd /d {INSTANCE} && vagrant ssh")]
        public string CurrentSshToInstanceArguments {
            get {
                return ((string)(this["CurrentSshToInstanceArguments"]));
            }
            set {
                this["CurrentSshToInstanceArguments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string DefaultSshToInstanceCommand {
            get {
                return ((string)(this["DefaultSshToInstanceCommand"]));
            }
            set {
                this["DefaultSshToInstanceCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string UserSshToInstanceCommand {
            get {
                return ((string)(this["UserSshToInstanceCommand"]));
            }
            set {
                this["UserSshToInstanceCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd")]
        public string CurrentSshToInstanceCommand {
            get {
                return ((string)(this["CurrentSshToInstanceCommand"]));
            }
            set {
                this["CurrentSshToInstanceCommand"] = value;
            }
        }
    }
}
